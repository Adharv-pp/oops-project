--------friend function--------



#include <iostream>
#include <string>

using namespace std;

class User 
{
private:
    string name;
    string address;
    string phoneNumber;

public:
    User()
    {
        name = "";
        address = "";
        phoneNumber = "";
    }

    static void demodisplay() 
    {
        cout << "EXAMPLE DISPLAY\n";
    }

    User(string exname, string exaddress, string exphoneNumber = "CUSTOMER PH NO")
    {
        this->name = exname;
        this->address = exaddress;
        this->phoneNumber = exphoneNumber;
    }

    void enterDetails() 
    {
        cin.ignore();
        cout << "\nEnter your name: ";
        getline(cin, name); 
        cout << "\nEnter your address: ";
        getline(cin, address); 
        cout << "\nEnter your phone number: ";
        cin >> phoneNumber; 
    }

    void displayDetails() 
    {
        cout << "User Details:" << endl;
        cout << "\nName: " << name << endl;
        cout << "Address: " << address << endl;
        cout << "Phone Number: " << phoneNumber << endl;
    }

    string getName() const
    {
        return name;
    }

    friend void showUserDetails(User& user, const string& context);// Declare friend function
};


void showUserDetails(User& user, const string& context)// Define the friend function outside the class
{
    cout << "\n--- User Details (" << context << ") ---\n";
    cout << "Name: " << user.name << endl;
    cout << "Address: " << user.address << endl;
    cout << "Phone Number: " << user.phoneNumber << endl;
    cout << "------------------------------------------\n";
}

class FoodOrderingSystem
{
private:
    static double totalprice;

public:
    void displayMenu() 
    {
        cout << "\nMENU:\n";
        cout << "1. Masala dosa - rs 80\n";
        cout << "2. Upma - rs 50\n";
        cout << "3. Idli - rs 30\n";
        cout << "4. Vada - rs 45\n";
        cout << "5. Biriyani - rs 120\n";
    }

    double getPrice(int choice) 
    {
        switch (choice) 
        {
            case 1: return 80;
            case 2: return 50;
            case 3: return 30;
            case 4: return 45;
            case 5: return 120;
            default: return 0.0;
        }
    }

    static void updateprice(double amount)
    {
        totalprice += amount;
    }

    static void displayTotalprice()
    {
        cout << "\nTotal Price: rs " << totalprice << endl;
    }
};

double FoodOrderingSystem::totalprice = 0.0;

int main()
{
    User::demodisplay();
    User user;
    user = User("CUSTOMER NAME", "CUSTOMER ADDRESS...");
    user.displayDetails();
    FoodOrderingSystem fos;
    char choice;
    int foodChoice;
    double price;

    while (true) {
        cout << "\nWelcome to the Food Ordering System" << endl;
        cout << "1. Enter User Details" << endl;
        cout << "2. Order Food" << endl;
        cout << "3. Display Total Price" << endl;
        cout << "4. Show User Details after placing order" << endl; 
        cout << "5. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        if (choice == '1') 
        {
            user.enterDetails();
            user.displayDetails();
        } 
        else if (choice == '2') 
        {
            fos.displayMenu();
            cout << "\nEnter the number of the item you want to order: ";
            cin >> foodChoice;
            price = fos.getPrice(foodChoice);
            if (price > 0)
            {
                cout << "\nYour total is: rs " << price << endl;
                cout << "\nThank you for your order, " << user.getName() << "!\n";
                FoodOrderingSystem::updateprice(price);
            }
            else 
            {
                cout << "Invalid choice. Please try again.\n";
            }
        } 
        else if (choice == '3') 
        {
            FoodOrderingSystem::displayTotalprice();
        } 
        else if (choice == '4') 
        {
            showUserDetails(user, "After placing an order"); // Call the friend function 
        } 
        else if (choice == '5') 
        {
            cout << "Exiting the system." << endl;
            break;
        } 
        else
        {
            cout << "Please enter 1, 2, 3, 4, or 5." << endl;
        }
    }

    User copiedUser = user;
    cout << "\nFinal details:" << endl;
    copiedUser.displayDetails();
    return 0;
}
