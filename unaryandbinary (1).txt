___________________________________________unary and binary overloading________________________________________________



#include <iostream>
#include <string>

using namespace std;

class User {
private:
    string name;
    string address;
    string phoneNumber;
    int foodChoice; 
    int units;  

public:
    User() {
        name = "";
        address = "";
        phoneNumber = "";
        foodChoice = 0;  
        units = 1; 
    }

    User(string name, string address, string phoneNumber = "CUSTOMER PH NO") {
        this->name = name;
        this->address = address;
        this->phoneNumber = phoneNumber;
        this->foodChoice = 0;  
        this->units = 1; 
    }

    void enterDetails() {
        cin.ignore();  
        cout << "\nEnter your name: ";
        getline(cin, name);
        cout << "\nEnter your address (please don't leave space): ";
        getline(cin, address);
        cout << "\nEnter your phone number: ";
        cin >> phoneNumber;
    }

    void setFoodChoice(int choice) {
        foodChoice = choice;
    }

    int getFoodChoice() {
        return foodChoice;
    }

    void setUnits(int u) {
        units = u;
    }

    int getUnits() {
        return units;
    }

    void displayDetails() {
        cout << "User Details:\n";
        cout << "Name: " << name << endl;
        cout << "Address: " << address << endl;
        cout << "Phone Number: " << phoneNumber << endl;
    }

    string getName() {
        return name;
    }

    
    double operator*(double price) {
        return price * units;
    }

    
    User& operator++() 
    { 
    foodChoice++;
    return *this;
    }

    User& operator--() { 
    if (foodChoice > 0) foodChoice--;
    return *this;
     }


    User& operator-=(int value) { 
        foodChoice = 0;
        units = 1;
        return *this;
    }

    
    bool operator==( User& other) {
        return foodChoice == other.foodChoice;
    }

    bool operator>( User& other) {
        return foodChoice > other.foodChoice;
    }
};

class FoodOrderingSystem {
public:
    void displayMenu() {
        cout << "\nMENU:\n";
        cout << "1. Masala dosa - rs 80\n";
        cout << "2. Upma - rs 50\n";
        cout << "3. Idli - rs 30\n";
        cout << "4. Vada - rs 45\n";
        cout << "5. Biryani - rs 120\n";
    }

    double getPrice(int choice) {
        switch (choice) {
            case 1: return 80;
            case 2: return 50;
            case 3: return 30;
            case 4: return 45;
            case 5: return 120;
            default: return 0.0;
        }
    }
};

int main() {
    int numUsers;
    cout << "Enter the number of users: ";
    cin >> numUsers;

    User* users = new User[numUsers];
    FoodOrderingSystem fos;
    int foodChoice, units;
    double price;

    for (int i = 0; i < numUsers; i++) {
        cout << "\nEntering details for User " << (i + 1) << ":\n";
        users[i].enterDetails();
        users[i].displayDetails();

        fos.displayMenu();
        cout << "\nEnter the number of the item you want to order: ";
        cin >> foodChoice;

        price = fos.getPrice(foodChoice);
        if (price > 0) {
            users[i].setFoodChoice(foodChoice);

            
            cout << "How many units of this item would you like? ";
            cin >> units;
            users[i].setUnits(units);  

            
            double totalPrice = users[i] * price;
            cout << "\nYour total for " << units << " units is: rs " << totalPrice << endl;
            cout << "\nThank you for your order, " << users[i].getName() << "!\n";
        } else {
            cout << "Invalid choice. Please try again.\n";
        }

       
        cout << "\nDo you want to increase your food choice by one? (y/n): ";
        char increase;
        cin >> increase;
        if (increase == 'y') {
            ++users[i];  
            cout << "Food choice increased.\n";
        }

        
        cout << "\nDo you want to decrease your food choice by one? (y/n): ";
        char decrease;
        cin >> decrease;
        if (decrease == 'y') {
            --users[i];  
            cout << "Food choice decreased.\n";
        }

        
        cout << "\nDo you want to cancel your order? (y/n): ";
        char resetOrder;
        cin >> resetOrder;
        if (resetOrder == 'y') {
            users[i] -= 1;  
            cout << "Order canceled.\n";
        }
    }

    
    if (numUsers > 1) {
        if (users[0] == users[1]) {
            cout << "\nUser 1 and User 2 ordered the same dish.\n";
        } else {
            cout << "\nUser 1 and User 2 ordered different dishes.\n";
        }

        if (users[0] > users[1]) {
            cout << users[0].getName() << " ordered more than " << users[1].getName() << endl;
        } else {
            cout << users[1].getName() << " ordered more than " << users[0].getName() << endl;
        }
    }

    delete[] users;

    return 0;
}
