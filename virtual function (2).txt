-----------virtual function------------
#include <iostream>
#include <string>
using namespace std;
class User
{
protected: 
    string name;
    string address;
    string phoneNumber;
    int foodChoice;
public:
    User()
    {
        name = "";
        address = "";
        phoneNumber = "";
        foodChoice = 0;
    }
    User(string name, string address, string phoneNumber = "CUSTOMER PH NO")
    {
        this->name = name;
        this->address = address;
        this->phoneNumber = phoneNumber;
        this->foodChoice = 0;
    }
    virtual void enterDetails()
    {
        cin.ignore();
        cout << "\nEnter your name: ";
        cin >> name;
        cout << "\nEnter your address (please don't leave space): ";
        cin >> address;
        cout << "\nEnter your phone number: ";
        cin >> phoneNumber;
    }
    void setFoodChoice(int choice)
    {
        foodChoice = choice;
    }
    int getFoodChoice() const
    {
        return foodChoice;
    }
    virtual void displayDetails() const
    {
        cout << "User Details:\n";
        cout << "Name: " << name << endl;
        cout << "Address: " << address << endl;
        cout << "Phone Number: " << phoneNumber << endl;
    }
    string getName() const
    {
        return name;
    }
    virtual ~User() {}
};

class PremiumUser : public User
{
private:
    string membershipLevel;
public:
    PremiumUser() : User()
    {
        membershipLevel = "Regular";
    }

    PremiumUser(string name, string address, string phoneNumber, string level)
    {
        this->name = name;
        this->address = address;
        this->phoneNumber = phoneNumber;
        this->membershipLevel = level;
    }
    void enterDetails()
    {
        User::enterDetails();
        cout << "Enter membership level (Regular, Silver, Gold): ";
        cin >> membershipLevel;
    }
    void displayDetails() const
    {
        User::displayDetails();
        cout << "Membership Level: " << membershipLevel << endl;
    }
};

class FoodOrderingSystem
{
public:
    void displayMenu() const
    {
        cout << "\nMENU:\n";
        cout << "1. Masala dosa - Rs 80\n";
        cout << "2. Upma - Rs 50\n";
        cout << "3. Idli - Rs 30\n";
        cout << "4. Vada - Rs 45\n";
        cout << "5. Biryani - Rs 120\n";
    }
    double getPrice(int choice) const
    {
        switch (choice)
        {
        case 1:
            return 80;
        case 2:
            return 50;
        case 3:
            return 30;
        case 4:
            return 45;
        case 5:
            return 120;
        default:
            return 0.0;
        }
    }
};

int main()
{
    int numUsers;
    cout << "Enter the number of users: ";
    cin >> numUsers;

    User **users = new User *[numUsers];
    FoodOrderingSystem fos;
    int foodChoice;
    double price;
    char isPremium;
    for (int i = 0; i < numUsers; i++)
    {
        cout << "\nIs this user a premium user? (y/n): ";
        cin >> isPremium;
        if (isPremium == 'y' || isPremium == 'Y')
        {
            users[i] = new PremiumUser();
        }
        else
        {
            users[i] = new User();
        }
        cout << "\nEntering details for User " << (i + 1) << ":\n";
        users[i]->enterDetails();
        users[i]->displayDetails();
        fos.displayMenu();
        cout << "\nEnter the number of the item you want to order: ";
        cin >> foodChoice;
        price = fos.getPrice(foodChoice);
        if (price > 0)
        {
            users[i]->setFoodChoice(foodChoice);
            cout << "\nYour total is: Rs " << price << endl;
            cout << "\nThank you for your order, " << users[i]->getName() << "!\n";
        }
        else
        {
            cout << "Invalid choice. Please try again.\n";
        }
    }

    cout << "\nFinal user details:\n";
    for (int i = 0; i < numUsers; i++)
    {
        cout << "\nUser " << (i + 1) << ":\n";
        users[i]->displayDetails();
        cout << "Food ordered: " << users[i]->getFoodChoice() << endl;
    }

    for (int i = 0; i < numUsers; i++)
    {
        delete users[i];
    }
    delete[] users;
    return 0;
}
